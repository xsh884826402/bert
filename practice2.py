import tensorflow as tf
import modeling_xsh
par = tf.constant([[1,2,3],[3,4,5],[5,6,7]])
a = tf.constant([[0,1,-1,-1],[-1,-1,-1,-1]])
# zeros = tf.zeros(a.shape,dtype=tf.int32)
# # a_mod = tf.where()
# a_bool = tf.not_equal(a,-1)
# a_mod = tf.where(condition=a_bool,x=a,y=zeros)
# a_res = tf.gather(par,a_mod)
# a_bool_ex = tf.stack([a_bool,a_bool,a_bool],axis=2)
# count_nonzero = tf.count_nonzero(a_bool,axis=1,dtype=tf.int32)
# a_res_mod = tf.where(condition=a_bool_ex,x=a_res,y=tf.zeros(shape=a_res.shape,dtype=tf.int32))
# a_res_final = tf.reduce_sum(a_res_mod,axis=1,)
# # a_res_final = a_res_final/tf.stack([count_nonzero,count_nonzero,count_nonzero],axis=1)
# count = tf.stack([count_nonzero for _ in range(50)],axis=1)

sub_word_bool = tf.not_equal(a,-1)
sub_word_index = tf.where(condition=sub_word_bool,x=a,y=tf.zeros(a.shape,dtype=tf.int32))
sub_word = tf.gather(par,sub_word_index,)
sub_word_shape = modeling_xsh.get_shape_list(sub_word)
sub_word = tf.reshape(sub_word,[-1,sub_word_shape[-1]])
a_bool = tf.reshape(sub_word_bool,[-1])
sub_word = tf.where(condition=a_bool,x=sub_word,y=tf.zeros(sub_word.shape,dtype=tf.int32))
sub_word = tf.reshape(sub_word,sub_word_shape)
sub_word = tf.cast(sub_word,dtype=tf.float32)
sub_word = tf.reduce_mean(sub_word,axis=-2)
with tf.Session() as sess:
    # print(sess.run(a_res_mod))
    # print(sess.run([a_res_final,tf.shape(a_res_final)]))
    # print(sess.run(a_bool_ex))
    # print(sess.run(count_nonzero))
    # print(sess.run(a_res_final))
    print(sess.run(tf.shape(sub_word)))
    print(sess.run(sub_word))